//plugins {
//    id 'com.android.application'
//    id 'org.jetbrains.kotlin.android'
//}
//
//apply from: "${project.rootDir}/ktlint.gradle"
//apply from: "${project.rootDir}/jacoco.gradle"
//
//android {
//    namespace 'com.baseapp.daggerhilt'
//    compileSdk 33
//
//    defaultConfig {
//        applicationId "com.baseapp.daggerhilt"
//        minSdk 24
//        targetSdk 33
//        versionCode 1
//        versionName "1.0"
//
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//    }
//
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//
//    buildFeatures {
//        dataBinding true
//    }
//    buildFeatures {
//        viewBinding true
//    }
//}
//
//dependencies {
//
//    implementation 'androidx.core:core-ktx:1.9.0'
//    implementation 'androidx.appcompat:appcompat:1.6.0'
//    implementation 'com.google.android.material:material:1.7.0'
//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
//}

plugins {
    id 'com.android.application'
    id 'org.sonarqube'
//    id 'com.google.gms.google-services'
//    id 'com.google.firebase.crashlytics'
    id 'jacoco'
}

apply from: "${project.rootDir}/common/android_common.gradle"
apply from: "${project.rootDir}/common/android_core_dependencies.gradle"
apply from: "${project.rootDir}/ktlint.gradle"
apply from: "${project.rootDir}/jacoco.gradle"

android {
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/*.kotlin_module']
        }
    }

    defaultConfig {
        applicationId "com.baseapp.daggerhilt"
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

    buildTypes {
        release {
            resValue "string", "app_name", "$appName"
            buildConfigField "String", "VARIANT", "\"release\""
//            minifyEnabled true
//            debuggable false
//            testCoverageEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        staging {
            resValue "string", "app_name", "$appName-staging"
            buildConfigField "String", "VARIANT", "\"staging\""
            versionNameSuffix "-stage"
//            minifyEnabled false
//            debuggable true
//            testCoverageEnabled true
        }
        debug {
            resValue "string", "app_name", "$appName-dev"
            buildConfigField "String", "VARIANT", "\"development\""
            versionNameSuffix "-dev"
//            minifyEnabled false
//            debuggable true
//            testCoverageEnabled true
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFileName = "$appName-${variant.versionName}.apk"
                output.outputFileName = outputFileName
            }
        }
    }
//    externalNativeBuild {
//        cmake {
//            path 'CMakeLists.txt'
//        }
//    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
//    namespace 'com.example.basedagger'
    namespace 'com.baseapp.daggerhilt'

//    packagingOptions {
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/LICENSE'
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/license.txt'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/NOTICE.txt'
//        exclude 'META-INF/notice.txt'
//        exclude 'META-INF/ASL2.0'
//        exclude("META-INF/*.kotlin_module")
//        resources.excludes.add("META-INF/*")
//    }
}

dependencies {
    implementation project(Modules.common)
    implementation project(Modules.navigation)
    implementation project(Modules.featureCrypto)
    implementation project(Modules.featureEmployee)
    implementation project(Modules.repository)
    implementation project(Modules.network)
    implementation project(Modules.local)

    // Networking
    // Retrofit + GSON
    implementation LibraryAndroid.retrofit
    implementation LibraryAndroid.retrofitConverterGson
    implementation LibraryAndroid.retrofitRX
    implementation LibraryAndroid.retrofitConverterMoshi
    implementation LibraryAndroid.retrofitCoroutines

    implementation(platform(LibraryAndroid.okhttpPlatform))
    implementation LibraryAndroid.okHttp
    implementation LibraryAndroid.okhttpLogging

    // Room
    implementation(LibraryAndroid.roomRuntime)
    annotationProcessor(LibraryAndroid.roomCompiler)
    kapt(LibraryAndroid.roomCompiler)
    implementation(LibraryAndroid.room)
    testImplementation(LibraryAndroid.roomTesting)

    //HTTP Inspector
    debugImplementation LibraryAndroid.chuckerActive
    stagingImplementation LibraryAndroid.chuckerActive
    releaseImplementation LibraryAndroid.chuckerDisable

//    // Google
    implementation LibraryAndroid.gson
    implementation LibraryAndroid.googleAuth
    // Google Ads
    implementation LibraryAndroid.googleAds

    // Import the BoM for the Firebase platform
    implementation platform(LibraryAndroid.firebaseBOM)
    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation LibraryAndroid.firebaseCrashlytics
    implementation LibraryAndroid.firebaseAnalytics
}

kapt {
    correctErrorTypes true
}